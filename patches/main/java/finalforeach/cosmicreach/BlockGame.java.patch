diff --git a/src/main/java/finalforeach/cosmicreach/BlockGame.java b/src/main/java/finalforeach/cosmicreach/BlockGame.java
index 34966b0..d056453 100644
--- a/src/main/java/finalforeach/cosmicreach/BlockGame.java
+++ b/src/main/java/finalforeach/cosmicreach/BlockGame.java
@@ -33,15 +33,6 @@ public class BlockGame extends ApplicationAdapter {
    public static MiniAudio miniAudio;
    public static Lwjgl3Application lwjglApp;
    public static boolean gameStarted = false;
-   static final int GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX = 36935;
-   static final int GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX = 36936;
-   static final int GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX = 36937;
-   static final int GPU_MEMORY_INFO_EVICTION_COUNT_NVX = 36938;
-   static final int GPU_MEMORY_INFO_EVICTED_MEMORY_NVX = 36939;
-   static final int GL_NUM_EXTENSIONS = 33309;
-   long totalFrames;
-   double totalDelta;
-   double lastFrameFPS;
    public static boolean isFocused = true;
    private int defaultWindowWidth;
    private int defaultWindowHeight;
@@ -57,8 +48,7 @@ public class BlockGame extends ApplicationAdapter {
       } finally {
          System.out.println("Dispose() called! Closing the game.");
 
-         while(ChunkSaver.isSaving) {
-         }
+         while(ChunkSaver.isSaving) {}
 
          System.exit(0);
       }
@@ -93,12 +83,7 @@ public class BlockGame extends ApplicationAdapter {
             GameSingletons.zoneRenderer = new BatchedZoneRenderer();
       }
 
-      GameSingletons.soundManager = new ISoundManager() {
-         @Override
-         public void playSound(Sound sound, float volume, float pitch, float pan) {
-            SoundManager.playSound(sound, volume, pitch, pan);
-         }
-      };
+      GameSingletons.soundManager = SoundManager::playSound;
       GameSingletons.blockModelInstantiator = new IBlockModelInstantiator() {
          @Override
          public BlockModel getInstance(String modelName, int rotXZ) {
@@ -114,12 +99,7 @@ public class BlockGame extends ApplicationAdapter {
             BlockModelJson.getInstanceFromJsonStr(modelName, modelJson, rotXZ);
          }
       };
-      ZoneGenerator.BLOCKSTATE_INSTANTIATOR = new BlockStateInstantiator() {
-         @Override
-         public BlockState getBlockStateInstance(String blockStateId) {
-            return BlockState.getInstance(blockStateId);
-         }
-      };
+      ZoneGenerator.BLOCKSTATE_INSTANTIATOR = BlockState::getInstance;
       gameStarted = true;
    }
 
