diff --git a/src/main/java/finalforeach/cosmicreach/rendering/meshes/ShortIndexedMesh.java b/src/main/java/finalforeach/cosmicreach/rendering/meshes/ShortIndexedMesh.java
index db98d28..cee54c1 100644
--- a/src/main/java/finalforeach/cosmicreach/rendering/meshes/ShortIndexedMesh.java
+++ b/src/main/java/finalforeach/cosmicreach/rendering/meshes/ShortIndexedMesh.java
@@ -3,13 +3,9 @@ package finalforeach.cosmicreach.rendering.meshes;
 import com.badlogic.gdx.graphics.Mesh;
 import com.badlogic.gdx.graphics.VertexAttributes;
 import com.badlogic.gdx.graphics.glutils.ShaderProgram;
-import com.badlogic.gdx.graphics.glutils.VertexData;
-import java.lang.reflect.Field;
 
 public class ShortIndexedMesh implements IGameMesh {
-   private final Mesh mesh;
-   private VertexData vertices;
-   private static Field verticesField;
+   private Mesh mesh;
 
    public ShortIndexedMesh(boolean isStatic, int maxVertices, int maxIndices, VertexAttributes attributes) {
       this.mesh = new Mesh(isStatic, maxVertices, maxIndices, attributes);
@@ -22,7 +18,6 @@ public class ShortIndexedMesh implements IGameMesh {
       }
    }
 
-   @Override
    public void setVertices(float[] array) {
       this.mesh.setVertices(array);
    }
@@ -60,37 +55,4 @@ public class ShortIndexedMesh implements IGameMesh {
    public void render(ShaderProgram shader, int glType) {
       this.mesh.render(shader, glType);
    }
-
-   @Override
-   public VertexData getVertices() {
-      if (this.vertices == null) {
-         try {
-            if (verticesField == null) {
-               verticesField = Mesh.class.getDeclaredField("vertices");
-               verticesField.setAccessible(true);
-            }
-
-            this.vertices = (VertexData)verticesField.get(this.mesh);
-         } catch (SecurityException | IllegalArgumentException | IllegalAccessException | NoSuchFieldException var2) {
-            var2.printStackTrace();
-         }
-      }
-
-      return this.vertices;
-   }
-
-   @Override
-   public void setAutoBind(boolean autoBind) {
-      this.mesh.setAutoBind(autoBind);
-   }
-
-   @Override
-   public int getNumMaxVertices() {
-      return this.getVertices().getNumMaxVertices();
-   }
-
-   @Override
-   public int getVertexSizeInFloats() {
-      return this.mesh.getVertexSize() / 4;
-   }
 }
